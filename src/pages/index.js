import styles from "@/styles/Home.module.css";
import axios from "axios";
import { Inter } from "next/font/google";
import Head from "next/head";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [lista, setLista] = useState([]);
  const [atualiza, setAtualiza] = useState(false);

  const [name, setName] = useState("");
  const [email, setEmail] = useState("");

  function handleChangeName(e) {
    setName(e.target.value);
  }

  function handleChangeEmail(e) {
    setEmail(e.target.value);
  }

  function deletar(id) {
    axios
      .delete(`https://api-crud-dnla.onrender.com/user/${id}`)
      .then((res) => {
        alert("Usuário deletado");
        setAtualiza(!atualiza);
      })
      .catch((err) => {
        console.log(err);
      });
  }

  function editar(id) {
    const data = {
      name: name,
      email: email,
    };

    axios
      .put(`https://api-crud-dnla.onrender.com/user/${id}`, data)
      .then((res) => {
        alert("Usuário editado");
      })
      .catch((err) => {
        console.log(err);
      });
  }

  function ver(id) {
    axios
      .get(`https://api-crud-dnla.onrender.com/user/${id}`)
      .then((res) => {
        console.log(res.data);
      })
      .catch((err) => {
        console.log(err);
      });
  }

  function adicionar() {
    const data = {
      name: name,
      email: email,
    };
    axios
      .post("https://api-crud-dnla.onrender.com/user", data)
      .then((res) => {
        setAtualiza(!atualiza);
      })
      .catch((err) => {
        console.log(err);
      });
  }

  function buscarLista() {
    axios
      .get("https://api-crud-dnla.onrender.com/users")
      .then((res) => {
        setLista(res.data);
      })
      .catch((err) => {
        console.log(err);
      });
  }

  useEffect(() => {
    buscarLista();
  }, [atualiza]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.titulo}>Minha Aplicação</h1>
        <div className={styles.tabela}>
          <div className={styles.header}>
            <h2 className={styles.tituloTabela}>Lista</h2>
            <form>
              <input
                className={styles.input}
                type="text"
                name="name"
                placeholder="Nome"
                onChange={handleChangeName}
              />
              <input
                className={styles.input}
                type="text"
                name="email"
                placeholder="Email"
                onChange={handleChangeEmail}
              />
            </form>
            <button className={styles.buttonAdicionar} onClick={adicionar}>
              Adicionar
            </button>
          </div>
          <div className={styles.items}>
            <p className={styles.item}>Nome</p>
            <p className={styles.item}>Email</p>
            <p className={styles.item}>Opções</p>
          </div>
          {lista.length > 0 && lista !== "No users found" ? (
            lista.map((i) => (
              <div className={styles.items} key={i.id}>
                <p className={styles.item}>{i.name}</p>
                <p className={styles.item}>{i.email}</p>
                <p className={styles.opcoes}>
                  <button
                    className={styles.buttonVer}
                    onClick={() => ver(i.id)}
                  >
                    Ver
                  </button>
                  <button
                    className={styles.buttonEditar}
                    onClick={() => editar(i.id)}
                  >
                    Editar
                  </button>
                  <button
                    className={styles.buttonDeletar}
                    onClick={() => deletar(i.id)}
                  >
                    Deletar
                  </button>
                </p>
              </div>
            ))
          ) : (
            <>Nenhum usuário encontrado</>
          )}
        </div>
      </main>
    </>
  );
}
